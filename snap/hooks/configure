#!/bin/bash
exec > >(tee "$SNAP_DATA/logs/configure.log") 2>&1

get_value() {
	local v=$(snapctl get $1)
	[ x$v == x ] && v=$2
	echo $v
}

tinc_name() {
	hostname | sed 's/[^a-z0-9]//'
}

file_header() {
	echo "# This file was written by the configure hook by snapd at $(date +%F_%T)."
	echo "# The file will be overwritten, see: tunnel config"
}

echo "\
$(file_header)

BRIDGE=$(get_value bridge tunnel0)
MODE=$(get_value mode switch)
TINC_PORT=$(get_value port 655)
SUBNET=$(get_value subnet)
CONNECTTO=$(get_value connect)
" > "$SNAP_DATA/tunnel/tunnel.conf"

. $SNAP_DATA/tunnel/tunnel.conf

echo "\
$(file_header)

Name = $(tinc_name)
Mode = $MODE
Port = $TINC_PORT
" > $SNAP_DATA/tinc/tinc.conf

for host in ${CONNECTTO/:/ }; do
	echo "ConnectTo=$host" >> $SNAP_DATA/tinc/tinc.conf
done

echo "\
#!/bin/bash
$(file_header)

brctl addif $BRIDGE \$INTERFACE
ip link set dev $BRIDGE up" \
> $SNAP_DATA/tinc/tinc-up
chmod +x $SNAP_DATA/tinc/tinc-up

if [ ! -z $SUBNET ]; then
	echo "ip address add dev $BRIDGE $SUBNET" >> $SNAP_DATA/tinc/tinc-up
fi

echo "\
#!/bin/bash
$(file_header)

ip link set dev $BRIDGE down
brctl delif $BRIDGE \$INTERFACE" \
> $SNAP_DATA/tinc/tinc-down
chmod +x $SNAP_DATA/tinc/tinc-down

if [ ! -z $SUBNET ]; then
	echo "ip address del dev $BRIDGE $SUBNET" >> $SNAP_DATA/tinc/tinc-down
fi

snapctl restart tunnel.tinc
