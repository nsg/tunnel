#!/bin/bash
exec > >(tee "$SNAP_DATA/logs/configure.log") 2>&1

get_value() {
	local v=$(snapctl get $1)
	[ x$v == x ] && v=$2
	echo $v
}

tinc_name() {
	hostname | sed 's/[^a-z0-9]//'
}

default_ip() {
	ip r g 8.8.8.8 | grep src | sed 's/.*src *\([^ ]*\).*/\1/'
}

echo "
BRIDGE=$(get_value bridge tunnel0)
MODE=$(get_value mode switch)
TINC_PORT=$(get_value tincport 655)
IP4ADDR=$(get_value ip4addr $(default_ip))
SERVER=$(get_value server yes)
SERVER_PORT=$(get_value serverport 4655)
" | grep = | sort > "$SNAP_DATA/tunnel/tunnel.conf"

. $SNAP_DATA/tunnel/tunnel.conf

echo "
Name = $(tinc_name)
Mode = $MODE
GraphDumpFile = $SNAP_DATA/tunnel/network.dot
Port = $TINC_PORT
" > $SNAP_DATA/tinc/tinc.conf

echo "
#!/bin/bash
brctl addif $BRIDGE \$INTERFACE
ip link set dev \$INTERFACE up
" > $SNAP_DATA/tinc/tinc-up
chmod +x $SNAP_DATA/tinc/tinc-up

echo "
#!/bin/bash
ip link set dev \$INTERFACE down
brctl delif $BRIDGE \$INTERFACE
" > $SNAP_DATA/tinc/tinc-down
chmod +x $SNAP_DATA/tinc/tinc-down

mkdir -p $SNAP_DATA/tinc/hosts
echo "
Address = $IP4ADDR
$(cat $SNAP_DATA/tinc/rsa_key.pub)
" > $SNAP_DATA/tinc/hosts/$(tinc_name)

cp $SNAP_DATA/tinc/rsa_key.pub $SNAP_DATA/www/public_key

if [ x$SERVER == xyes ]; then
	snapctl stop tunnel.www
	snapctl start tunnel.www
else
	snapctl stop tunnel.www
fi

snapctl stop tunnel.tinc
snapctl start tunnel.tinc
